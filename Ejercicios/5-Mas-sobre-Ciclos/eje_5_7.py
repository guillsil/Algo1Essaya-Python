""" N칰meros perfectos y n칰meros amigos
a) Escribir una funci칩n que devuelva la suma de todos los divisores de un n칰mero 洧녵, sin
incluirlo.
b) Usando la funci칩n anterior, escribir una funci칩n que imprima los primeros 洧녴 n칰meros
tales que la suma de sus divisores sea igual a s칤 mismo (es decir los primeros 洧녴 n칰meros
perfectos).
c) Usando la primera funci칩n, escribir una funci칩n que imprima las primeras 洧녴 parejas
de n칰meros (洧녩, 洧녪), tales que la suma de los divisores de 洧녩 es igual a 洧녪 y la suma de los
divisores de 洧녪 es igual a 洧녩 (es decir las primeras 洧녴 parejas de n칰meros amigos).
d) Proponer optimizaciones a las funciones anteriores para disminuir el tiempo de ejecu-
ci칩n."""
# a)
def suma_divisores(n):
    suma = 0
    for i in range(1, n):
        if n % i == 0:
            suma += i
    return suma
assert suma_divisores(6) == 6
# b)
def numeros_perfectos(m):
    i = 1
    while m > 0:
        if suma_divisores(i) == i:
            print(i)
            m -= 1
        i += 1
# c)
def numeros_amigos(m):
    i = 1
    while m > 0:
        if suma_divisores(i) == i:
            j = suma_divisores(i)
            if suma_divisores(j) == i:
                print(i, j)
                m -= 1
        i += 1
numeros_amigos(20)
